kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "csi-libvirt.fullname" . }}-controller
  labels:
    {{- include "csi-libvirt.labels" . | nindent 4 }}
    tier: controller
  namespace: kube-system
spec:
  serviceName: "csi-libvirt"
  selector:
    matchLabels:
      {{- include "csi-libvirt.selectorLabels" . | nindent 6 }}
      tier: controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: csi-libvirt-plugin
        {{- with .Values.controller.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "csi-libvirt.selectorLabels" . | nindent 8 }}
        tier: controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.extraSpec }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      priorityClassName: system-cluster-critical
      serviceAccount: csi-libvirt-controller-sa
      containers:
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.5.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--feature-gates=Topology=true"
            - "--default-fstype=ext4"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-attacher
          image: registry.k8s.io/sig-storage/csi-attacher:v4.3.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--reconcile-sync=30m"
            - "--timeout=2m"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        # - name: csi-snapshotter
        #   image: registry.k8s.io/sig-storage/csi-snapshotter:v6.2.1
        #   args:
        #     - "--csi-address=$(ADDRESS)"
        #     - "--v=5"
        #   env:
        #     - name: ADDRESS
        #       value: /var/lib/csi/sockets/pluginproxy/csi.sock
        #   imagePullPolicy: IfNotPresent
        #   volumeMounts:
        #     - name: socket-dir
        #       mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-resizer
          image: registry.k8s.io/sig-storage/csi-resizer:v1.8.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=30s"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-libvirt-plugin
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            - "controller"
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          {{- with .Values.controller.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            {{- with .Values.controller.volumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
        {{- with .Values.controller.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: csi-libvirt-controller-sa
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-libvirt-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-libvirt-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: csi-libvirt-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: csi-libvirt-provisioner-role
  apiGroup: rbac.authorization.k8s.io